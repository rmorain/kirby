# AUTOGENERATED! DO NOT EDIT! File to edit: 01_dataset_builder.ipynb (unless otherwise specified).

__all__ = ['DatasetBuilder']

# Cell
from rake_nltk import Rake
from .database_proxy import WikiDatabase
import json

# Cell
class DatasetBuilder():
    def __init__(self):
        self.rake = Rake()
        self.db = WikiDatabase()
        pass

    def build(self, ds, dataset_type='random'):
        "Build a database based a given dataset"
        if dataset_type == 'random':
            ds.map(self.random, batched=False)
        elif dataset_type == 'description':
            pass
        elif dataset_type == 'relevant':
            pass

    def keyword(self, x):
        ranked_phrases = self.get_ranked_phrases(x)
        return ranked_phrases[0]

    def random(self, x):
        keyword = self.keyword(x)
        e = self.db.get_entity_by_label(keyword)
        return e

    def get_ranked_phrases(self, x):
        self.rake.extract_keywords_from_text(x)
        return self.rake.get_ranked_phrases()

    def entity(self, ranked_phrases):
        "Queries the knowledge base to find the entity and it's relations"
        for phrase in ranked_phrases:
            entity = self.kba.get_entity(phrase)
            if entity is not None:
                return entity
        return entity