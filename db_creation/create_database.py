# AUTOGENERATED! DO NOT EDIT! File to edit: 14_create_database.ipynb (unless otherwise specified).

__all__ = ['create_database', 'split_and_optimize', 'regexp']

# Cell
import sqlite3
import traceback
import re


# Cell
def create_database(database_name):
    conn = None
    try:
        conn = sqlite3.connect('{}.db'.format(database_name))
        c = conn.cursor()
        c.execute(
            "CREATE TABLE IF NOT EXISTS Entities(entity_id VARCHAR(255) NOT NULL PRIMARY KEY, label VARCHAR(255) NOT "\
            "NULL, description VARCHAR(255) NOT NULL);")
        c.execute(
            "CREATE TABLE IF NOT EXISTS Entities_not_alpha(entity_id VARCHAR(255) NOT NULL PRIMARY KEY, "\
            "label VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL);")
        c.execute(
            "CREATE TABLE IF NOT EXISTS Properties_relations(entity_id VARCHAR(255) NOT NULL, relations "\
            "VARCHAR(255));"),
        c.execute("CREATE TABLE IF NOT EXISTS Aliases(entity_id VARCHAR(255), aliases VARCHAR(255));")
        c.execute("CREATE TABLE IF NOT EXISTS Properties(property_id VARCAR(255) NOT NULL PRIMARY KEY, "\
            "label VARCHAR(255) NOT NULL);")
        for i in range(ord('a'), ord('z') + 1):
            c.execute(
                "CREATE TABLE IF NOT EXISTS Entities_{}(entity_id VARCHAR(255) NOT NULL PRIMARY KEY, label VARCHAR(255) " \
                "NOT NULL, description VARCHAR(255) NOT NULL);".format(chr(i)))
        conn.commit()
        conn.close()
        print("Database created")
    except Exception as e:
        print(e)
        conn.commit()
        conn.close()
        traceback.print_exc()
        print("Error creating database. Please try to run the code again")

def split_and_optimize(database_name):
    conn = None
    try:
        conn = sqlite3.connect('{}.db'.format(database_name))
        conn.create_function("REGEXP", 2, regexp)
        c = conn.cursor()
#         for i in range(ord('a'), ord('z') + 1):
#             c.execute('INSERT INTO Entities_{} SELECT * FROM Entities WHERE label LIKE \"{}%\";'.format(chr(i), chr(i)))
#             c.execute('CREATE INDEX index_id_{} ON Entities_{} (label);'.format(chr(i), chr(i)))
#             conn.commit()
        c.execute('INSERT INTO Entities_not_alpha SELECT * FROM Entities WHERE label NOT REGEXP \'[a-zA-Z]\';')
        c.execute('CREATE INDEX index_id_not_alpha ON Entities_not_alpha (label);')
        c.execute('CREATE INDEX index_id_alias ON Aliases (entity_id);')
        c.execute('CREATE INDEX index_id_relations ON Properties_relations (entity_id);')
        conn.commit()
        conn.close()
        print("Database created")
    except Exception as e:
        print(e)
        conn.commit()
        conn.close()
        traceback.print_exc()
        print("Error creating database. Please try to run the code again")

def regexp(expr, item):
    reg = re.compile(expr)
    return reg.search(item) is not None
